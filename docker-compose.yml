services:
  app:
    container_name: spring-boot-app
    image: ${DOCKER_IMAGE}
    ports:
      - "8080:8080"
    restart: always
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION_ACCESS: ${JWT_EXPIRATION_ACCESS}
      JWT_EXPIRATION_REFRESH: ${JWT_EXPIRATION_REFRESH}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      FCM_SERVICE_ACCOUNT_FILE: /app/firebase-service-account.json 
    volumes:
      - ${FCM_SERVICE_ACCOUNT_FILE}:/app/firebase-service-account.json 
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init_postgres.sql  
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

